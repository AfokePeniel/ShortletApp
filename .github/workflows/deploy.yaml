name: CI/CD Pipeline

on:
  push:
    branches: [ main ]

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  GKE_CLUSTER: your-cluster-name
  GKE_ZONE: us-central1
  IMAGE: api-image

jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1

    - name: Setup Google Cloud CLI
      uses: google-github-actions/setup-gcloud@v0.2.0
      with:
        service_account_key: ${{ secrets.GCP_SA_KEY }}
        project_id: ${{ secrets.GCP_PROJECT_ID }}

    - name: Configure Docker
      run: |
        gcloud --quiet auth configure-docker

    - name: Build Docker image
      run: |
        docker build -t gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA api/

    - name: Push Docker image
      run: |
        docker push gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA

    - name: Initialize Terraform
      run: |
        cd terraform
        terraform init

    - name: Terraform Plan
      run: |
        cd terraform
        terraform plan -var "project_id=$PROJECT_ID" -var "api_image=gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA"

    - name: Terraform Apply
      run: |
        cd terraform
        terraform apply -auto-approve -var "project_id=$PROJECT_ID" -var "api_image=gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA"

    - name: Verify API
      run: |
        EXTERNAL_IP=$(kubectl get service api -n api -o jsonpath='{.status.loadBalancer.ingress[0].ip}')
        curl -f http://$EXTERNAL_IP/time || exit 1